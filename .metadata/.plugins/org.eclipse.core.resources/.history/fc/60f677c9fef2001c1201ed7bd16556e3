package com.websocket.chat.controller;

import java.util.List;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.websocket.chat.model.ChatRoom;

import lombok.RequiredArgsConstructor;

// @MessageMapping을 통해 Websocket으로 들어오는 메시지 발행을 처리

// 클라이언트에서 prefix를 붙여서 /pub/chat/message로 발행 요청을 하면 Controller가 해당 메시지를 받아 처리
// 메시지가 발행되면 /sub/chat/room/{roomId}로 메시지를 send
// 클라이언트에서는 해당 주소(/sub/chat/room/{roomId})를 구독하고 있다가 메시지가 전달되면 화면에 출력
// 여기서 /sub/chat/room/{roomId}는 채팅룸을 구분하는 값 -> 즉, pub/sub에서 Topic의 역할이라고 보면 된다.

// WebSockChatHandler 삭제


@RequiredArgsConstructor
@RestController
@RequestMapping("/chat")
public class ChatController {
	private final ChatService chatService;
	
	@PostMapping
    public ChatRoom createRoom(@RequestParam String name) {
        return chatService.createRoom(name);
    }

    @GetMapping
    public List<ChatRoom> findAllRoom() {
        return chatService.findAllRoom();
    }
}
